{
  "name": "section",
  "type": "registry:ui",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "path": "magicui/section.tsx",
      "content": "import React from \"react\";\n\nimport { cva, VariantProps } from \"class-variance-authority\";\nimport Animate, { AnimatedWrapperProps } from \"./animate\";\nimport TextBox, { TextBoxProps } from \"./textbox\";\nimport { cn } from \"@nextui-org/react\";\nimport { useIsMobile } from \"@/lib/use-is-mobile\";\n\nexport interface LandingSectionProps\n  extends VariantProps<typeof landingSectionStyles> {\n  landingTextProps: TextBoxProps;\n  content?: React.ReactNode;\n  contentBottom?: boolean;\n  className?: string;\n  classNames?: {\n    container?: string;\n    contentWrapper?: string;\n    textWrapper?: string;\n  };\n  animatedWrapperProps?: {\n    animatedWrapperPropsContainer?: Partial<AnimatedWrapperProps>;\n    animatedWrapperPropsText?: Partial<AnimatedWrapperProps>;\n    animatedWrapperPropsContent?: Partial<AnimatedWrapperProps>;\n  };\n}\n\nconst landingSectionStyles = cva(\"max-lg:py-5 py-20\", {\n  variants: {\n    orientation: {\n      left: \"text-left items-end justify-between\",\n      center: \"text-center items-center\",\n      right: \"text-left items-end justify-between\",\n    },\n  },\n  defaultVariants: {\n    orientation: \"center\",\n  },\n});\n\nconst contentAlignmentStyles = cva(\"\", {\n  variants: {\n    orientation: {\n      left: \"flex-row\",\n      center: \"flex-col\",\n      right: \"flex-row-reverse\",\n    },\n  },\n  defaultVariants: {\n    orientation: \"left\",\n  },\n});\n\n/**\n * LandingSection component that wraps LandingText with a styled section and optional content.\n * @param orientation - The orientation of the section and LandingText.\n * @param className - Additional class for the section container.\n * @param classNames - Classnames for specific parts of the section.\n * @param landingTextProps - Props to pass to the LandingText component.\n * @param content - Optional ReactNode to render alongside the text.\n * @param contentBottom - When true, renders the content at the bottom.\n * @param animatedWrapperProps - Props to pass to the AnimatedWrapper components.\n * @returns JSX.Element\n */\nconst Section: React.FC<LandingSectionProps> = ({\n  orientation,\n  className,\n  classNames = {},\n  landingTextProps,\n  content,\n  contentBottom = false,\n  animatedWrapperProps,\n}) => {\n  const isMobile = useIsMobile();\n  const renderContentBottom = isMobile || contentBottom;\n\n  return (\n    <Animate\n      {...animatedWrapperProps?.animatedWrapperPropsContainer}\n      className={cn(\n        landingSectionStyles({ orientation }),\n        \"flex overflow-hidden\",\n        renderContentBottom\n          ? \"flex-col items-start\"\n          : contentAlignmentStyles({ orientation }),\n        classNames.container,\n        className,\n      )}\n    >\n      <Animate {...animatedWrapperProps?.animatedWrapperPropsText}>\n        <TextBox\n          {...landingTextProps}\n          orientation={\n            isMobile\n              ? orientation === \"right\"\n                ? \"left\"\n                : orientation\n              : orientation\n          }\n        />\n      </Animate>\n      {content && (\n        <Animate\n          {...animatedWrapperProps?.animatedWrapperPropsContent}\n          className={cn(\n            !isMobile && !contentBottom && \"w-[50vw]\",\n            isMobile && \"h-fit flex items-start justify-start\",\n            renderContentBottom ? \"mt-12 w-full\" : \"ml-4\",\n            classNames.contentWrapper,\n          )}\n        >\n          {content}\n        </Animate>\n      )}\n    </Animate>\n  );\n};\n\nexport default Section;\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}