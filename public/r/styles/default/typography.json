{
  "name": "typography",
  "type": "registry:ui",
  "files": [
    {
      "path": "magicui/typography.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport React from \"react\";\n\nconst typographyVariants = cva(\"text-foreground\", {\n  variants: {\n    variant: {\n      // Core variants\n      primary: \"font-semibold\",\n      secondary: \"text-foreground/80\",\n      ghost: \"text-foreground/60\",\n      muted: \"text-muted-foreground\",\n\n      // Title variants with extended styles\n      hero: \"font-extrabold text-foreground capitalize tracking-tight\", // Tighter tracking for titles\n      title: \"font-bold text-foreground capitalize tracking-tight\", // Tighter tracking for titles\n      subtitle: \"font-medium text-foreground-700\",\n\n      // Additional semantic variants\n      success: \"text-green-600 dark:text-green-400\",\n      warning: \"text-yellow-600 dark:text-yellow-400\",\n      danger: \"text-red-600 dark:text-red-400\",\n      info: \"text-blue-600 dark:text-blue-400\",\n\n      // Special variants\n      gradient:\n        \"bg-clip-text text-transparent bg-gradient-to-r from-primary to-secondary\",\n      highlight: \"bg-primary/10 text-primary px-1 py-0.5 rounded\",\n      code: \"font-mono bg-muted px-1.5 py-0.5 rounded\",\n    },\n\n    size: {\n      \"2xs\": \"text-[0.625rem] leading-[1rem]\", // 10px\n      xs: \"text-xs leading-[1.25rem]\", // 12px\n      sm: \"text-sm leading-5\", // 14px\n      base: \"text-base leading-6\", // 16px\n      lg: \"text-lg leading-7\", // 18px\n      xl: \"text-xl leading-[1.75rem]\", // 20px\n      \"2xl\": \"text-2xl leading-8\", // 24px\n      \"3xl\": \"text-3xl leading-9\", // 30px\n      \"4xl\": \"text-4xl leading-10\", // 36px\n      \"5xl\": \"text-5xl leading-[3.5rem]\", // 48px\n      \"6xl\": \"text-6xl leading-[4rem]\", // 60px\n      \"7xl\": \"text-7xl leading-[4.5rem]\", // 72px\n      \"8xl\": \"text-8xl leading-[5rem]\", // 96px\n      \"9xl\": \"text-9xl leading-[6rem]\", // 128px\n    },\n\n    weight: {\n      thin: \"font-thin\",\n      extralight: \"font-extralight\",\n      light: \"font-light\",\n      normal: \"font-normal\",\n      medium: \"font-medium\",\n      semibold: \"font-semibold\",\n      bold: \"font-bold\",\n      extrabold: \"font-extrabold\",\n      black: \"font-black\",\n    },\n\n    align: {\n      left: \"text-left\",\n      center: \"text-center\",\n      right: \"text-right\",\n      justify: \"text-justify\",\n    },\n\n    tracking: {\n      tighter: \"tracking-tighter\", // Tighter tracking for more cohesive titles\n      tight: \"tracking-tight\", // Slightly tight tracking for regular text\n      normal: \"tracking-normal\",\n      wide: \"tracking-wide\",\n      wider: \"tracking-wider\",\n      widest: \"tracking-widest\",\n    },\n  },\n\n  defaultVariants: {\n    variant: \"primary\",\n    size: \"base\",\n    weight: \"normal\",\n    align: \"left\",\n    tracking: \"normal\",\n  },\n});\n\ntype TypographyProps<C extends React.ElementType = \"p\"> =\n  React.PropsWithChildren<{\n    as?: C;\n    variant?:\n      | \"primary\"\n      | \"secondary\"\n      | \"ghost\"\n      | \"muted\"\n      | \"hero\"\n      | \"title\"\n      | \"subtitle\"\n      | \"success\"\n      | \"warning\"\n      | \"danger\"\n      | \"info\"\n      | \"gradient\"\n      | \"highlight\"\n      | \"code\";\n    size?:\n      | \"2xs\"\n      | \"xs\"\n      | \"sm\"\n      | \"base\"\n      | \"lg\"\n      | \"xl\"\n      | \"2xl\"\n      | \"3xl\"\n      | \"4xl\"\n      | \"5xl\"\n      | \"6xl\"\n      | \"7xl\"\n      | \"8xl\"\n      | \"9xl\";\n    weight?:\n      | \"thin\"\n      | \"extralight\"\n      | \"light\"\n      | \"normal\"\n      | \"medium\"\n      | \"semibold\"\n      | \"bold\"\n      | \"extrabold\"\n      | \"black\";\n    align?: \"left\" | \"center\" | \"right\" | \"justify\";\n    tracking?: \"tighter\" | \"tight\" | \"normal\" | \"wide\" | \"wider\" | \"widest\";\n    className?: string;\n  }> &\n    React.ComponentPropsWithRef<C>;\n\nconst Typography = React.forwardRef(function Typography<\n  C extends React.ElementType = \"p\",\n>(\n  {\n    as,\n    className,\n    variant,\n    size,\n    weight,\n    align,\n    tracking,\n    children,\n    ...props\n  }: TypographyProps<C>,\n  ref?: React.Ref<HTMLElement>\n) {\n  const Component = as || \"p\";\n  const classes = typographyVariants({\n    variant,\n    size,\n    weight,\n    align,\n    tracking,\n  });\n\n  return (\n    <Component ref={ref} className={cn(classes, className)} {...props}>\n      {children}\n    </Component>\n  );\n});\n\nTypography.displayName = \"Typography\";\n\nexport default Typography;\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}