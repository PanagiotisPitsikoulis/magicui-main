{
  "name": "typography",
  "type": "registry:ui",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "path": "magicui/typography.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport React from \"react\";\n\n/**\n * Utility type for polymorphic ref\n */\ntype PolymorphicRef<C extends React.ElementType> =\n  React.ComponentPropsWithRef<C>[\"ref\"];\n\n/**\n * Props for the 'as' prop to enable polymorphic behavior\n */\ntype AsProp<C extends React.ElementType> = {\n  as?: C;\n};\n\n/**\n * Utility type to omit conflicting props\n */\ntype PropsToOmit<C extends React.ElementType, P> = keyof (AsProp<C> & P);\n\n/**\n * Base polymorphic component props without ref\n */\ntype PolymorphicComponentProp<\n  C extends React.ElementType,\n  Props = {},\n> = React.PropsWithChildren<Props & AsProp<C>> &\n  Omit<React.ComponentPropsWithoutRef<C>, PropsToOmit<C, Props>>;\n\n/**\n * Polymorphic component props with ref support\n */\ntype PolymorphicComponentPropWithRef<\n  C extends React.ElementType,\n  Props = {},\n> = PolymorphicComponentProp<C, Props> & { ref?: PolymorphicRef<C> };\n\n/**\n * Available variants for the Typography component\n */\ntype TypographyVariant = \"primary\" | \"secondary\" | \"ghost\" | \"muted\";\n\n/**\n * Available sizes for the Typography component\n */\ntype TypographySize =\n  | \"xs\"\n  | \"sm\"\n  | \"base\"\n  | \"lg\"\n  | \"xl\"\n  | \"2xl\"\n  | \"3xl\"\n  | \"4xl\"\n  | \"5xl\";\n\n/**\n * Props specific to the Typography component\n */\ntype TypographyProps<C extends React.ElementType> =\n  PolymorphicComponentPropWithRef<\n    C,\n    {\n      /** Style variant of the text */\n      variant?: TypographyVariant;\n      /** Size of the text */\n      size?: TypographySize;\n    }\n  >;\n\n/**\n * Type definition for the Typography component itself\n */\ntype TypographyComponent = <C extends React.ElementType = \"p\">(\n  props: TypographyProps<C>,\n) => React.ReactElement;\n\n/**\n * A polymorphic Typography component that supports various text styles and sizes.\n * @example\n * ```tsx\n * <Typography as=\"h1\" size=\"4xl\" variant=\"primary\">\n *   Heading\n * </Typography>\n *\n * <Typography as=\"p\" size=\"lg\" variant=\"secondary\">\n *   Paragraph text\n * </Typography>\n * ```\n */\nconst Typography = React.forwardRef(function Typography<\n  C extends React.ElementType = \"p\",\n>(\n  {\n    as,\n    className,\n    variant,\n    size = \"base\",\n    children,\n    ...props\n  }: TypographyProps<C>,\n  ref?: PolymorphicRef<C>,\n): React.ReactElement {\n  const Component = as || \"p\";\n\n  return (\n    <Component\n      ref={ref}\n      className={cn(\n        // Base styles\n        \"text-foreground\",\n\n        // Variants\n        {\n          // Primary variant - bold, prominent text\n          \"font-semibold\": variant === \"primary\",\n\n          // Secondary variant - slightly muted text\n          \"text-foreground/80\": variant === \"secondary\",\n\n          // Ghost variant - more muted text\n          \"text-foreground/60\": variant === \"ghost\",\n\n          // Muted variant - maximum contrast reduction\n          \"text-muted-foreground\": variant === \"muted\",\n        },\n\n        // Text sizes mapping to Tailwind's scale\n        {\n          \"text-xs\": size === \"xs\", // 12px\n          \"text-sm\": size === \"sm\", // 14px\n          \"text-base\": size === \"base\", // 16px\n          \"text-lg\": size === \"lg\", // 18px\n          \"text-xl\": size === \"xl\", // 20px\n          \"text-2xl\": size === \"2xl\", // 24px\n          \"text-3xl\": size === \"3xl\", // 30px\n          \"text-4xl\": size === \"4xl\", // 36px\n          \"text-5xl\": size === \"5xl\", // 48px\n        },\n        className,\n      )}\n      {...props}\n    >\n      {children}\n    </Component>\n  );\n}) as TypographyComponent;\n\nexport default Typography;\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}